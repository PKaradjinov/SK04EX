{
	"info": {
		"_postman_id": "cdc08f63-3edf-4121-8980-bdf658743a4c",
		"name": "SkilloFinal",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Post",
			"item": [
				{
					"name": "CreateUser",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Response time is less than 500ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(500);\r",
									"});\r",
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"pm.test(\"Status code is 400\", function () {\r",
									"    pm.response.to.have.status(400);\r",
									"});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"pm.environment.set(\"Random UserName\", pm.variables.replaceIn('{{$randomUserName}}'))\r",
									"pm.environment.set(\"Random Email\", pm.variables.replaceIn('{{$randomEmail}}'))"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"username\": \"{{Random UserName}}}\",\r\n  \"email\": \"{{Random Email}}\",\r\n  \"birthDate\": \"12.22.1985\",\r\n  \"password\": \"Alauto191404191404\",\r\n  \"publicInfo\": \"info alabala\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/users",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"users"
							]
						}
					},
					"response": []
				},
				{
					"name": "Login",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Body matches string\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"pepitokaradjinov\");\r",
									"});\r",
									"pm.test(\"Response body contains user name\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"pepitokaradjinov\");\r",
									"});\r",
									"pm.test(\"Status code is 201\", function () {\r",
									"    pm.response.to.have.status(201);\r",
									"});\r",
									"pm.test(\"Проверка на URL\", function () {\r",
									"    pm.expect(pm.response.text()).to.include('\"profilePicUrl\":\"https://i.imgur.com/u62Rlx8.jpg\"');\r",
									"});\r",
									"pm.test(\"Content-Type header is present\", function() {\r",
									"  pm.response.to.have.header(\"Content-Tasdasdasdype\");\r",
									"});\r",
									"pm.test(\"Content-Type header is present\", function() {\r",
									"  pm.response.to.have.header(\"Content-Taype\");\r",
									"});\r",
									"pm.test(\"Body does not have Unauthorized\", function() {\r",
									"  pm.expect(pm.response.text()).to.not.contain(\"Unauthorized\");\r",
									"});\r",
									"\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"usernameOrEmail\": \"pepitokaradjinov\",\r\n  \"password\": \"Alauto191404\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/users/login",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"users",
								"login"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Get",
			"item": [
				{
					"name": "GetUser",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"pm.test(\"Съществува ли потребител pepitokaradjinov\", function () {\r",
									"    pm.expect(pm.response.text()).to.include('\"username\":\"pepitokaradjinov\"');\r",
									"});\r",
									"pm.test(\"Провери бързината\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(200);\r",
									"});\r",
									"pm.test(\"Провери бързината под стандартните 200ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(100);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\"user\": {\r\n        \"id\": 1280,\r\n        \"username\": \"pepitokaradjinov\",\r\n        \"email\": \"pepitokarad@abv.bg\",\r\n        \"publicInfo\": \"\",\r\n        \"profilePicUrl\": \"https://i.imgur.com/u62Rlx8.jpg\"\r\n}\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/users/1280",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"users",
								"1280"
							]
						}
					},
					"response": []
				},
				{
					"name": "GetAllUsers",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Body matches string\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"Unauthorized\");\r",
									"})\r",
									";pm.test(\"Person is nina555\", () => {\r",
									"  const responseJson = pm.response.json();\r",
									"  pm.expect(responseJson.name).to.eql(\"nina555\");\r",
									" });\r",
									" pm.test(\"Response property matches environment variable\", function () {\r",
									"  pm.expect(pm.response.json().user).to.eql(pm.environment.get(\"name\"));\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/users",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"users"
							]
						}
					},
					"response": []
				},
				{
					"name": "GetPostById",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Response time is less than 200ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(200);\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/posts/3855",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"posts",
								"3855"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Delete",
			"item": [
				{
					"name": "New Request",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful Delete request\", function () {\r",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 404]);\r",
									"});\r",
									"pm.test(\"Проверяваме дали успешно изтриваме пост\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"Post was deleted!\");\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/posts/3855",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"posts",
								"3855"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Put",
			"item": [
				{
					"name": "UserIsBanned",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Response time is less than 200ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(200);\r",
									"});\r",
									"pm.test(\"Body contain Unauthorized\", function() {\r",
									"  pm.expect(pm.response.text()).to.contain(\"Unauthorized\");\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"isBanned\": true,\r\n  \"description\": \"string\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/users/1280/banstatus",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"users",
								"1280",
								"banstatus"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Patch",
			"item": [
				{
					"name": "FollowUser",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Проверка,един мотребител не може да бъде последван два пъти\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"You already follow this user\");\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PATCH",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"action\": \"followUser\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/users/1245",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"users",
								"1245"
							]
						}
					},
					"response": []
				},
				{
					"name": "New Request",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Проверка за последване на своя профил\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"You cannot follow yourself\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PATCH",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"action\": \"followUser\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/users/1280",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"users",
								"1280"
							]
						}
					},
					"response": []
				}
			]
		}
	],
	"auth": {
		"type": "bearer",
		"bearer": [
			{
				"key": "token",
				"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6MTI4MCwidXNlcm5hbWUiOiJwZXBpdG9rYXJhZGppbm92Iiwicm9sZXMiOlt7ImlkIjoyLCJyb2xlIjoxfV0sImlzQmFubmVkIjp0cnVlLCJpYXQiOjE2MzIzODg2NzgsImV4cCI6MTYzMjM5MjI3OH0.rl0DNoPzmjWn2XDIg-Sg-HerFkzP4C5lzL12W9kmt_4",
				"type": "string"
			}
		]
	},
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	]
}